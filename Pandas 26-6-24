#Pandas is a high-performance Python library designed for data manipulation and analysis. 
--Some key features of Pandas include:
--1.DataFrames and Series 
--2.Comprehensive Data Operations
--3.Handling Missing Data
--4.Integration with Other Libraries

#Benefits of Using Pandas for Data Cleaning and Analysis
1.Ease of Use
2.Flexibility
3.Handling Large Datasets
4.Comprehensive Data Cleaning
5.Advanced Data Analysis



#Exploring Series Attributes and Methods
--Common Attributes:
--s.index: Returns the index labels of the Series.
--s.values: Returns the underlying values in the Series as a NumPy array.
--s.dtype: Provides the data type of the Series elements.
--s.size: Returns the number of elements in the Series.

--Common Methods:
--s.head(n): Returns the first n elements of the Series.
--s.tail(n): Returns the last n elements.
--s.sort_values(): Sorts the Series by its values.
--s.mean(), s.median(), s.std(): Compute common statistics.
--s.str: Provides string manipulation methods if the Series contains string data.
--s.apply(func): Applies a function to each element in the Series.

#Example
import pandas as pd
# Create a sample DataFrame
data = {
    'Product': ['A', 'B', 'A', 'B', 'C', 'A', 'C'],
    'Region': ['North', 'South', 'East', 'West', 'North', 'South', 'East'],
    'Sales': [100, 150, 200, 130, 220, 180, 250]
}

df = pd.DataFrame(data)
print("Original DataFrame:\n", df)

#output
Original DataFrame:
   Product Region  Sales
0       A  North    100
1       B  South    150
2       A   East    200
3       B   West    130
4       C  North    220
5       A  South    180
6       C   East    250

