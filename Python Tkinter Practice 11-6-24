#Graphical user interface:A graphical user interface, or GUI, is a form of user interface that allows users to interact with electronic devices through graphical icons and visual indicators

#Tkinter: is the most commonly used library for developing GUI (Graphical User Interface) in Python.

#Tkinter provides a way to create windows, buttons, labels, text boxes, and other GUI components.

#Basic Widgets in Tkinter:
Label: Display static text or images.
Button: Create clickable buttons to trigger actions.
Entry: Allow user input for single-line text.
Frame: Organize widgets within a container.
Checkbutton: Create checkboxes for boolean options.
Radiobutton: Create radio buttons for mutually exclusive options.
Listbox: Display a list of items for selection.
Scrollbar: Add scrollbars to widgets like Listbox.
Menu: Create simple menus for application navigation.
Canvas: Draw shapes, lines, text, and images


#Intermediate Widgets in Tkinter
Combobox: Provide a dropdown list with editable text entry.
Scale: Create a scale widget for selecting values within a range.
Toplevel: Create additional windows/dialogs.
Message: Display simple messages or notifications.
Menubutton: Create a button that opens a menu.
Progressbar: Show progress of a task.
Spinbox: Provide a numerical input with up/down arrows.


#The two main method used for building python application for gui are:
1.Tk():To create a main window
2.mainloop(): is used when your application is ready to run.
#NOTE: To create python tinkter we use 
#EXAMPLE
import tkinter
m = tkinter.Tk()
'''
widgets are added here
'''
m.mainloop()

# Python tkinter hello world program 

from tkinter import *

root = Tk() 
a = Label(root, text ="Hello World") 
a.pack() 

root.mainloop()

#OUTPUT
Hello World




#PRACTICE OF BASIC WIDGETS
#1. label and button
# Import Module
from tkinter import *

# create root window
root = Tk()

# root window title and dimension
root.title("Welcome to Himachal")
# Set geometry(widthxheight)
root.geometry('350x200')

# adding a label to the root window
lbl = Label(root, text = "Are you From Himachal?")
lbl.grid()

# function to display text when
# button is clicked
def clicked():
	lbl.configure(text = "Do you like hill stations")

# button widget with blue color text
# inside
btn = Button(root, text = "Click here" ,
			fg = "blue", command=clicked)
# set Button grid
btn.grid(column=1, row=0)

# Execute Tkinter
root.mainloop()






#Practice Of Entry() Widget
# Import Module
from tkinter import *

# create root window
root = Tk()

# root window title and dimension
root.title("Welcome to Himachal")
# Set geometry(widthxheight)
root.geometry('350x200')

# adding a label to the root window
lbl = Label(root, text = "Are You From himachal?")
lbl.grid()

# adding Entry Field
txt = Entry(root, width=10)
txt.grid(column =1, row =0)


# function to display user text when 
# button is clicked
def clicked():

	res = "You wrote" + txt.get()
	lbl.configure(text = res)

# button widget with blur color text inside
btn = Button(root, text = "Click Here" ,
			fg = "blue", command=clicked)
# Set Button Grid
btn.grid(column=2, row=0)

# Execute Tkinter
root.mainloop()




#Practice Of CheckButton
from tkinter import *

root = Tk() 
root.geometry("300x200") 

w = Label(root, text ='Are You Interested inn trekking', font = "50") 
w.pack() 

Checkbutton1 = IntVar() 
Checkbutton2 = IntVar() 
Checkbutton3 = IntVar() 

Button1 = Checkbutton(root, text = "Yes", 
                    variable = Checkbutton1, 
                    onvalue = 1, 
                    offvalue = 0, 
                    height = 2, 
                    width = 10) 

Button2 = Checkbutton(root, text = "No", 
                    variable = Checkbutton2, 
                    onvalue = 1, 
                    offvalue = 0, 
                    height = 2, 
                    width = 10) 

    
Button1.pack() 
Button2.pack() 

mainloop() 



#practice of radiobutton

from tkinter import *


# Creating master Tkinter window
master = Tk()
master.geometry("175x175")

# Tkinter string variable
# able to store any string value
v = StringVar(master, "1")

# Dictionary to create multiple buttons
values = {"RadioButton 1" : "1",
		"RadioButton 2" : "2",
		"RadioButton 3" : "3",
		"RadioButton 4" : "4"}

# Loop is used to create multiple Radiobuttons
# rather than creating each button separately
for (text, value) in values.items():
	Radiobutton(master, text = text, variable = v, 
				value = value, indicator = 0,
				background = "light blue").pack(fill = X, ipady = 5)

# Infinite loop can be terminated by
# keyboard or mouse interrupt
# or by any predefined function (destroy())
mainloop()
